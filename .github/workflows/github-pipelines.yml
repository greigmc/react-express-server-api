name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node

      - name: Install dependencies
        run: |
          npm ci
          npm install --save-dev @eslint/js eslint eslint-plugin-react-hooks eslint-plugin-react-refresh typescript-eslint
          npm ls @eslint/js eslint eslint-plugin-react-hooks eslint-plugin-react-refresh typescript-eslint || echo "Dependencies may still be missing!"

      - name: Debug Module Resolution
        run: |
          ls -la node_modules/@eslint/js || echo "@eslint/js not found"
          node -e "require('@eslint/js')"

  lint-and-test:
    needs: install-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Run ${{ matrix.task }}
        run: |
          if [ "${{ matrix.task }}" = "lint" ]; then
            npx eslint . --ext .js,.jsx,.ts,.tsx --config ./eslint.config.js;
          else
            npx jest --config=jest.config.js --ci --coverage || echo "Tests failed!";
          fi
