image: node:20

definitions:
  caches:
    node: ./node_modules
    coverage: ./coverage

pipelines:
  default:
    - parallel:
        - step:
            name: Install Dependencies
            caches:
              - node
            script:
              # Clean installation
              - rm -rf node_modules
              - npm cache clean --force
              - npm ci
              
              # Verify critical dependencies
              - npm ls dotenv jest babel-jest @babel/core @babel/preset-env || echo "Some dependencies are missing!"

# Added Linting - Catching code quality issues early with ESLint.
    - parallel:
        - step:
            name: Run Linting
            caches:
              - node
            script:
              - npx eslint . --ext .js,.jsx,.ts,.tsx

        - step:
            name: Run Tests
            caches:
              - node
              - coverage
            script:
              # Set environment variables
              - export NODE_ENV=test
              - export VITE_API_USERS=https://reqres.in/api/users?page=2
              - export VITE_API_LOGIN=https://dummyjson.com/auth/login
              - export VITE_API_BEARER_TOKEN=https://dummyjson.com/user/me

              # Run Jest tests using npx
              - npx jest --config=jest.config.js --ci --coverage || echo "Tests failed!"

              # Store coverage reports
              - mkdir -p artifacts/coverage
              - cp -r coverage/* artifacts/coverage/

    - step:
        name: Upload Coverage
        caches:
          - coverage
        script:
          # Upload coverage to Codecov
          - curl -s https://codecov.io/bash | bash

    - step:
        name: Dependency Audit
        script:
          # Audit for vulnerabilities
          - npm audit --production

